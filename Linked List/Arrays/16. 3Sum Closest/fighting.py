class Solution:
    def threeSumClosest(self, nums: list[int], target: int) -> int:
        nums.sort()
        closest = sum(nums[:3])
        for i in range(len(nums)):
            left = i + 1
            right = len(nums) - 1
            while left < right:
                answer = nums[i] + nums[left] + nums[right]
                if abs(target - answer) < abs(target - closest):
                    closest = answer

                if answer > target:
                    right -= 1
                else:
                    left += 1
        return closest

temp = Solution()
nums = [-684,-142,-161,-789,85,854,556,-344,178,802,-146,497,-569,259,-916,-942,-261,-941,-111,-553,884,-10,358,-903,-180,-505,-487,805,995,671,685,-112,-637,534,278,-920,-494,896,450,-604,76,-589,885,228,161,-130,-226,976,108,955,162,517,670,-747,-247,-280,-632,-53,573,-612,-528,761,-515,-796,481,799,-274,-234,827,-921,89,-388,-158,252,180,-271,514,-469,316,342,505,-476,-253,506,-871,555,679,280,867,117,-987,-999,539,-588,104,773,-740,-410,-391,-285,-448,819,-608,211,-59,566,476,523,-198,775,-683,-86,982,-318,979,-716,664,-759,592,-46,873,453,-729,907,-428,-315,302,298,-357,-734,-116,-207,998,-868,521,-347,-756,-658,546,-579,-156,-649,310,28,-546,334,-892,323,-902,-299,680,-863,118,729,-981,125,657,-266,131,-210,214,-600,-765,-277,-681,-667,835,891,152,509,589,972,862,-933,847,-227,-364,-339,-173,-457,68,-879,-39,-857,119,-424,-306,-874,-206,770,712,441,999,-602,699,-820,549,193,277,-250,-218,778,-853,860,-298,-859,-900,-483,580,42,793,-700,-841,801,-441,-642,744,-825,954,-185,-208,-148,-41,552,971,-362,554,46,410,-864,409,637,-809,990,154,765,365,-3,-29,106,894,-818,-936,842,716,-989,-630,-625,-295,486,-776,-443,-125,-545,360,-677,1,-187,-251,223,789,-192,-836,-703,-439,-668,724,201,8,463,-827,-826,-283,-663,224,54,197,-918,-618,253,-670,-119,159,-915,-946,-834,515,535,-972,740,233,429,-964,-194,604,686,-829,-392,-338,807,536,435,-40,-91,285,-325,385,107,-897,157,-486,502,886,4,462,469,-446,755,-927,-176,478,268,319,-291,590,212,404,804,171,-28,243,367,-564,618,663,176,213,236,-577,865,-929,943,468,-334,-500,511,-948,-755,-634,-523,-567,-965,-662,-877,-735,44,460,745,-51,-744,973,205,858,190,-6,-873,20,-328,612,-816,572,-514,-287,611,362,407,-550,-183,826,952,-839,-679,-669,99,-406,764,-340,-671,-449,-400,624,375,417,732,-928,696,-539,-270,-336,-833,-460,445,196,-705,50,-394,69,164,145,255,-317,249,-184,-652,-413,449,-917,-971,291,902,-327,32,-399,419,-907,779,-7,583,513,-870,825,625,790,-414,850,856,-431,-598,398,-311,837,-471,43,487,-134,-106,-124,-42,974,430,-15,-323,-433,785,208,-202,950,-752,395,416,66,-47,560,596,-188,-257,377,60,384,-478,633,-479,774,-858,-162,350,-954,937,381,530,-373,-430,312,-831,963,421,-324,-573,-522,-354,-52,403,175,-619,-595,691,771,-804,565,96,-408,411,-930,-848,-174,479,-970,442,3,-586,-490,-758,-386,169,-170,912,-628,-407,-44,752,251,743,-832,-530,-275,146,-24,704,498,-31,526,88,748,-9,38,227,-547,-409,-622,-16,-693,428,-30,-704,-860,-418,-429,-641,-803,-71,400,-771,-98,-262,-109,-472,-149,-470,324,-25,347,909,-883,782,-393,120,965,-97,-961,139,-940,98,-695,452,-326,533,-382,-599,339,-697,830,-265,-541,-762,-459,492,687,-529,-56,325,-806,693,-985,606,882,-644,503,-276,-464,-193,522,-880,7,839,399,-113,731,-240,57,124,647,892,-718,874,638,2,944,181,195,688,-885,812,841,-456,579,-904,353,-888,-745,448,488,-133,-773,330,562,709,105,739,-770,929,-81,114,-212,-810,-294,-105,-640,-321,-167,-797,-689,642,294,899,928,-707,-349,-359,-931,-437,-361,866,210,-425,644,958,187,203,734,299,-743,735,-994,184,722,344,148,15,-219,-540,797,363,970,335,315,-82,525,474,-341,650,-587,809,749,78,-331,-607,-560,501,-791,-623,444,-980,-710,26,977,10,352,-333,-369,-477,824,97,394,-937,941,-843,547,-383,-229,-984,763,-241,393,-647,814,-706,820,725,601,-551,73,-416,640,-635,-830,226,433,-823,630,-465,374,-659,-279,-739,682,-308,-817,-371,-150,-805,-675,-513,935,-583,192,414,13,-982,366,-898,-159,-558,-199,-763,-654,-535,165,508,245,757,-526,-343,345,-922,-292,247,-300,-65,471,-538,-986,-396,472,494,-182,454,-239,-721,465,-882,-66,-570,-442,424,723,0,-1000,-606,-609,-493,-801,-656,300,-365,-243,651,-129,617,491,-912,605,-769,328,698,-467,-379,593,558,-258,194,-228,-910,371,17,993,-284,234,-923,-935,301,307,-661,960,520,270,962,-312,910,-144,-938,-177,715,217,-651,53,832,392,-844,-139,-959,-720,-214,876,519,346,258,-196,-723,545,373,136,-72,818,-717,-355,25,-605,571,-924,134,880,576,378,983,-4,-955,719,538,906,123,34,821,-438,281,695,-489,189,-638,870,144,-320,984,-384,370,275,-235,495,710,309,701,992,-536,542,-715,-787,115,151,128,-631,272,747,-249,354,-215,242,-60,-496,-372,869,561,-205,-316,-840,597,961,-108,274,-499,422,237,496,660,440,-780,273,754,-375,786,717,-222,-43,619,-143,-726,-237,490]
print(temp.threeSumClosest(nums, -8846))